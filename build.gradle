import groovy.json.JsonSlurper

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.4.31'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:1.4.30'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '4.1.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
}

// Support for Github Actions based CI: create named versions from Github releases
static def readGithubReleaseEvent() {
    def isRelease = System.getenv('GITHUB_EVENT_NAME') == 'release'
    def path = isRelease ? System.getenv('GITHUB_EVENT_PATH') : null
    def file = path ? new File(path) : null
    def text = file?.text
    return text ? new JsonSlurper().parseText(text) : null
}

static def getSnapshotVersionName(grgit) {
    return "${grgit.describe(tags: true)}${grgit.status().isClean() ? '' : '-dirty'}-SNAPSHOT"
}

def githubReleaseEvent = readGithubReleaseEvent()

// Remember to use your own group if you fork this library
group = 'com.swedbankpay.mobilesdk'
version = githubReleaseEvent?.release?.tag_name
        ?: (grgit ? getSnapshotVersionName(grgit) : 'local')

allprojects {
    group = rootProject.group
    version = rootProject.version
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

nexusPublishing {
    repositories {
        sonatype()
    }
}
